<?xml version="1.0" encoding="UTF-8"?>

<!-- ===================================================================== -->
<!-- -->
<!-- Sample TreeCache Service Configuration -->
<!-- -->
<!-- ===================================================================== -->

<server>

    <classpath codebase="./lib" archives="jbosscache-core.jar, jgroups.jar" />


    <!-- ==================================================================== -->
    <!-- Defines TreeCache configuration -->

    <!-- ==================================================================== -->

    <mbean code="org.jboss.cache.Cache" name="jboss.cache:service=Cache">

        <depends>jboss:service=Naming</depends>
        <depends>jboss:service=TransactionManager</depends>

        <!-- Configure the TransactionManager -->
        <attribute name="TransactionManagerLookupClass">org.jboss.cache.transaction.JBossTransactionManagerLookup
        </attribute>

        <!-- Node locking scheme: OPTIMISTIC PESSIMISTIC (default) -->
        <attribute name="NodeLockingScheme">OPTIMISTIC</attribute>

        <!-- Isolation level : SERIALIZABLE REPEATABLE_READ (default) READ_COMMITTED
            READ_UNCOMMITTED NONE -->
        <attribute name="IsolationLevel">REPEATABLE_READ</attribute>

        <!-- Valid modes are LOCAL REPL_ASYNC REPL_SYNC INVALIDATION_ASYNC INVALIDATION_SYNC -->
        <attribute name="CacheMode">LOCAL</attribute>

        <!-- Just used for async repl: use a replication queue -->
        <attribute name="UseReplQueue">false</attribute>

        <!-- Replication interval for replication queue (in ms) -->
        <attribute name="ReplQueueInterval">0</attribute>

        <!-- Max number of elements which trigger replication -->
        <attribute name="ReplQueueMaxElements">0</attribute>

        <!-- Name of cluster. Needs to be the same for all clusters, in order to
            find each other -->
        <attribute name="ClusterName">TreeCache-Cluster</attribute>

        <!-- JGroups protocol stack properties. Can also be a URL, e.g. file:/home/bela/default.xml
            <attribute name="ClusterProperties"></attribute> -->

        <!-- Whether or not to fetch state on joining a cluster NOTE this used
            to be called FetchStateOnStartup and has been renamed to be more descriptive. -->
        <attribute name="FetchInMemoryState">true</attribute>

        <!-- The max amount of time (in milliseconds) we wait until the initial
            state (ie. the contents of the cache) are retrieved from existing members
            in a clustered environment -->
        <attribute name="InitialStateRetrievalTimeout">20000</attribute>

        <!-- Number of milliseconds to wait until all responses for a synchronous
            call have been received. -->
        <attribute name="SyncReplTimeout">20000</attribute>

        <!-- Max number of milliseconds to wait for a lock acquisition -->
        <attribute name="LockAcquisitionTimeout">15000</attribute>

        <!-- Indicate whether to use marshalling or not. Set this to true if you
            are running under a scoped class loader, e.g., inside an application server.
            Default is "false". -->
        <attribute name="UseMarshalling">true</attribute>

        <attribute name="EvictionPolicyConfig">
            <config>
                <attribute name="wakeUpIntervalSeconds">120</attribute>

                <!-- Cache wide default -->
                <region name="/_default_" policyClass="org.jboss.cache.eviction.FIFOPolicy">
                    <!-- This is the maximum number of nodes allowed in this region. -->
                    <!-- 0 denotes no limit. -->
                    <attribute name="maxNodes">1000</attribute>
                </region>

                <region name="/architecture" policyClass="org.jboss.cache.eviction.FIFOPolicy">
                    <attribute name="maxNodes">0</attribute>
                </region>
            </config>
        </attribute>


    </mbean>

</server>
